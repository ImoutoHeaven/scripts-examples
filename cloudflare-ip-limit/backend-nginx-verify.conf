upstream alist
{
	server 127.0.0.1:5244;
}


server
{
	listen 80;
	server_name <some_domain>;
	access_log /var/log/nginx/<some_domain>.access.log;
	error_log /var/log/nginx/<some_domain>.error.log;
        # real ips
	include /etc/nginx/cloudflare-real-ip.conf;
	# cloudflare ip ranges above
	set_real_ip_from <front_end_machine_ipv4>/32;
	set_real_ip_from <front_end_machine_ipv4>/32;
        # front end machine ip address above, you can also use tailscale or something like VPNs for safer connections.
        
	
	
	# 将所有HTTP请求重定向到HTTPS
	location /
	{
		return 302 https://$host$request_uri;
	}
}

server
{
	listen *:443 ssl http2;
	server_name <some_domain>;

	ssl_certificate /home/cert/edgecert.pem; #cloudflare 15-year edge cert is OK. no need to update cert yourself.
	ssl_certificate_key /home/cert/edgekey.pem; #cloudflare 15-year edge cert is OK. no need to update cert yourself.

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers off;

	access_log /var/log/nginx/<some_domain>.access.log;
	error_log /var/log/nginx/<some_domain>.error.log;
        # real ips
	include /etc/nginx/cloudflare-real-ip.conf;
	# cloudflare ip ranges above
	set_real_ip_from <front_end_machine_ipv4>/32;
	set_real_ip_from <front_end_machine_ipv4>/32;
        # front end machine ip address above, you can also use tailscale or something like VPNs for safer connections.
        
	location /
	{
		if ($http_user_agent ~* "qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|Qwantify")
		{
			return 403;
		}
		if ($http_x_your_header != "<your secret>") # this is defined as X-Your-Header at cloudflare convert rules. which is to modify request from cloudflare to origin server to add a static header called X-Your-Header with <your secret> value.
		{
			return 403; # if user try to bypass cloudflare , they will not have this header, therefore, blocked.
		}
		client_max_body_size 0;
		proxy_pass http://alist;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	client_max_body_size 0;

}
